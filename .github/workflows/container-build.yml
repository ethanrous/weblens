name: Build Container

on:
  workflow_dispatch:
    inputs:
      build_tag:
        description: 'Build Tag'
        required: false
        default: ""
        type: string
      do_release_build:
        description: 'Release'
        required: false
        default: false
        type: boolean
      deploy:
        description: The environment to deploy to
        required: true
        type: choice
        options:
          - "none"
          - "not-none"
        default: "none"
  push:
    branches: [ "main" ]

jobs:
  build-container:
    runs-on: ubuntu-latest
    environment: >-
      ${{ github.ref == 'refs/heads/main'
          && github.event_name != 'workflow_dispatch'
          && github.event.inputs.deploy == 'none'
          && 'amethyst'
          || github.event.inputs.do_release_build == true && 'prod' || null }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: GoGoGadgetDocker
        run: |
          sudo docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          echo "EVENT NAME: $GITHUB_EVENT_NAME, REF: $GITHUB_REF"
          echo ${{ github.event.inputs.deploy }}
          echo "DEPLOY2 $ENVIRON"
          if [[ -z "$BUILD_TAG" ]] && [[ $RELEASE_BUILD == true ]]; then
            echo "ERR BUILD_TAG must be specified when doing release build"
            exit 1
          elif [ -z "$BUILD_TAG" ] && [ "$GITHUB_REF" == "refs/heads/main" ]; then
            BUILD_TAG="amethyst-${{ github.run_number }}"
          elif [ -z "$BUILD_TAG" ]; then
            BUILD_TAG="dev-$(git rev-parse --short HEAD)"
          fi
          
          echo "Grab the new container at" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "docker.io/ethrous/weblens:$BUILD_TAG-amd64" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          ./scripts/gogogadgetdocker.bash -p -s -t $BUILD_TAG
          exit $?
        env:
          BUILD_TAG: ${{ inputs.build_tag }}
          RELEASE_BUILD: ${{ inputs.do_release_build }}
          ENVIRON: ${{ inputs.deploy }}
