/*
Weblens API

Programmatic access to the Weblens server

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NewFileParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewFileParams{}

// NewFileParams struct for NewFileParams
type NewFileParams struct {
	FileSize *int32 `json:"fileSize,omitempty"`
	IsDir *bool `json:"isDir,omitempty"`
	NewFileName *string `json:"newFileName,omitempty"`
	ParentFolderId *string `json:"parentFolderId,omitempty"`
}

// NewNewFileParams instantiates a new NewFileParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewFileParams() *NewFileParams {
	this := NewFileParams{}
	return &this
}

// NewNewFileParamsWithDefaults instantiates a new NewFileParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewFileParamsWithDefaults() *NewFileParams {
	this := NewFileParams{}
	return &this
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *NewFileParams) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewFileParams) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *NewFileParams) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *NewFileParams) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetIsDir returns the IsDir field value if set, zero value otherwise.
func (o *NewFileParams) GetIsDir() bool {
	if o == nil || IsNil(o.IsDir) {
		var ret bool
		return ret
	}
	return *o.IsDir
}

// GetIsDirOk returns a tuple with the IsDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewFileParams) GetIsDirOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDir) {
		return nil, false
	}
	return o.IsDir, true
}

// HasIsDir returns a boolean if a field has been set.
func (o *NewFileParams) HasIsDir() bool {
	if o != nil && !IsNil(o.IsDir) {
		return true
	}

	return false
}

// SetIsDir gets a reference to the given bool and assigns it to the IsDir field.
func (o *NewFileParams) SetIsDir(v bool) {
	o.IsDir = &v
}

// GetNewFileName returns the NewFileName field value if set, zero value otherwise.
func (o *NewFileParams) GetNewFileName() string {
	if o == nil || IsNil(o.NewFileName) {
		var ret string
		return ret
	}
	return *o.NewFileName
}

// GetNewFileNameOk returns a tuple with the NewFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewFileParams) GetNewFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewFileName) {
		return nil, false
	}
	return o.NewFileName, true
}

// HasNewFileName returns a boolean if a field has been set.
func (o *NewFileParams) HasNewFileName() bool {
	if o != nil && !IsNil(o.NewFileName) {
		return true
	}

	return false
}

// SetNewFileName gets a reference to the given string and assigns it to the NewFileName field.
func (o *NewFileParams) SetNewFileName(v string) {
	o.NewFileName = &v
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise.
func (o *NewFileParams) GetParentFolderId() string {
	if o == nil || IsNil(o.ParentFolderId) {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewFileParams) GetParentFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentFolderId) {
		return nil, false
	}
	return o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *NewFileParams) HasParentFolderId() bool {
	if o != nil && !IsNil(o.ParentFolderId) {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *NewFileParams) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

func (o NewFileParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewFileParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.IsDir) {
		toSerialize["isDir"] = o.IsDir
	}
	if !IsNil(o.NewFileName) {
		toSerialize["newFileName"] = o.NewFileName
	}
	if !IsNil(o.ParentFolderId) {
		toSerialize["parentFolderId"] = o.ParentFolderId
	}
	return toSerialize, nil
}

type NullableNewFileParams struct {
	value *NewFileParams
	isSet bool
}

func (v NullableNewFileParams) Get() *NewFileParams {
	return v.value
}

func (v *NullableNewFileParams) Set(val *NewFileParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNewFileParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNewFileParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewFileParams(val *NewFileParams) *NullableNewFileParams {
	return &NullableNewFileParams{value: val, isSet: true}
}

func (v NullableNewFileParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewFileParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


