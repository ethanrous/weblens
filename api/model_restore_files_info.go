/*
Weblens API

Programmatic access to the Weblens server

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestoreFilesInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreFilesInfo{}

// RestoreFilesInfo struct for RestoreFilesInfo
type RestoreFilesInfo struct {
	NewParentId *string `json:"newParentId,omitempty"`
}

// NewRestoreFilesInfo instantiates a new RestoreFilesInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreFilesInfo() *RestoreFilesInfo {
	this := RestoreFilesInfo{}
	return &this
}

// NewRestoreFilesInfoWithDefaults instantiates a new RestoreFilesInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreFilesInfoWithDefaults() *RestoreFilesInfo {
	this := RestoreFilesInfo{}
	return &this
}

// GetNewParentId returns the NewParentId field value if set, zero value otherwise.
func (o *RestoreFilesInfo) GetNewParentId() string {
	if o == nil || IsNil(o.NewParentId) {
		var ret string
		return ret
	}
	return *o.NewParentId
}

// GetNewParentIdOk returns a tuple with the NewParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreFilesInfo) GetNewParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.NewParentId) {
		return nil, false
	}
	return o.NewParentId, true
}

// HasNewParentId returns a boolean if a field has been set.
func (o *RestoreFilesInfo) HasNewParentId() bool {
	if o != nil && !IsNil(o.NewParentId) {
		return true
	}

	return false
}

// SetNewParentId gets a reference to the given string and assigns it to the NewParentId field.
func (o *RestoreFilesInfo) SetNewParentId(v string) {
	o.NewParentId = &v
}

func (o RestoreFilesInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreFilesInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewParentId) {
		toSerialize["newParentId"] = o.NewParentId
	}
	return toSerialize, nil
}

type NullableRestoreFilesInfo struct {
	value *RestoreFilesInfo
	isSet bool
}

func (v NullableRestoreFilesInfo) Get() *RestoreFilesInfo {
	return v.value
}

func (v *NullableRestoreFilesInfo) Set(val *RestoreFilesInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreFilesInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreFilesInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreFilesInfo(val *RestoreFilesInfo) *NullableRestoreFilesInfo {
	return &NullableRestoreFilesInfo{value: val, isSet: true}
}

func (v NullableRestoreFilesInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreFilesInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


