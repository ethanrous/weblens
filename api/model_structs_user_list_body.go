/*
Weblens API

Programmatic access to the Weblens server

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StructsUserListBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StructsUserListBody{}

// StructsUserListBody struct for StructsUserListBody
type StructsUserListBody struct {
	AddUsers []string `json:"addUsers,omitempty"`
	RemoveUsers []string `json:"removeUsers,omitempty"`
}

// NewStructsUserListBody instantiates a new StructsUserListBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructsUserListBody() *StructsUserListBody {
	this := StructsUserListBody{}
	return &this
}

// NewStructsUserListBodyWithDefaults instantiates a new StructsUserListBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructsUserListBodyWithDefaults() *StructsUserListBody {
	this := StructsUserListBody{}
	return &this
}

// GetAddUsers returns the AddUsers field value if set, zero value otherwise.
func (o *StructsUserListBody) GetAddUsers() []string {
	if o == nil || IsNil(o.AddUsers) {
		var ret []string
		return ret
	}
	return o.AddUsers
}

// GetAddUsersOk returns a tuple with the AddUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsUserListBody) GetAddUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.AddUsers) {
		return nil, false
	}
	return o.AddUsers, true
}

// HasAddUsers returns a boolean if a field has been set.
func (o *StructsUserListBody) HasAddUsers() bool {
	if o != nil && !IsNil(o.AddUsers) {
		return true
	}

	return false
}

// SetAddUsers gets a reference to the given []string and assigns it to the AddUsers field.
func (o *StructsUserListBody) SetAddUsers(v []string) {
	o.AddUsers = v
}

// GetRemoveUsers returns the RemoveUsers field value if set, zero value otherwise.
func (o *StructsUserListBody) GetRemoveUsers() []string {
	if o == nil || IsNil(o.RemoveUsers) {
		var ret []string
		return ret
	}
	return o.RemoveUsers
}

// GetRemoveUsersOk returns a tuple with the RemoveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsUserListBody) GetRemoveUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoveUsers) {
		return nil, false
	}
	return o.RemoveUsers, true
}

// HasRemoveUsers returns a boolean if a field has been set.
func (o *StructsUserListBody) HasRemoveUsers() bool {
	if o != nil && !IsNil(o.RemoveUsers) {
		return true
	}

	return false
}

// SetRemoveUsers gets a reference to the given []string and assigns it to the RemoveUsers field.
func (o *StructsUserListBody) SetRemoveUsers(v []string) {
	o.RemoveUsers = v
}

func (o StructsUserListBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StructsUserListBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddUsers) {
		toSerialize["addUsers"] = o.AddUsers
	}
	if !IsNil(o.RemoveUsers) {
		toSerialize["removeUsers"] = o.RemoveUsers
	}
	return toSerialize, nil
}

type NullableStructsUserListBody struct {
	value *StructsUserListBody
	isSet bool
}

func (v NullableStructsUserListBody) Get() *StructsUserListBody {
	return v.value
}

func (v *NullableStructsUserListBody) Set(val *StructsUserListBody) {
	v.value = val
	v.isSet = true
}

func (v NullableStructsUserListBody) IsSet() bool {
	return v.isSet
}

func (v *NullableStructsUserListBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructsUserListBody(val *StructsUserListBody) *NullableStructsUserListBody {
	return &NullableStructsUserListBody{value: val, isSet: true}
}

func (v NullableStructsUserListBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructsUserListBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


