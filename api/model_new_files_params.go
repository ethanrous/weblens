/*
Weblens API

Programmatic access to the Weblens server

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NewFilesParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewFilesParams{}

// NewFilesParams struct for NewFilesParams
type NewFilesParams struct {
	NewFiles []NewFileParams `json:"newFiles,omitempty"`
}

// NewNewFilesParams instantiates a new NewFilesParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewFilesParams() *NewFilesParams {
	this := NewFilesParams{}
	return &this
}

// NewNewFilesParamsWithDefaults instantiates a new NewFilesParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewFilesParamsWithDefaults() *NewFilesParams {
	this := NewFilesParams{}
	return &this
}

// GetNewFiles returns the NewFiles field value if set, zero value otherwise.
func (o *NewFilesParams) GetNewFiles() []NewFileParams {
	if o == nil || IsNil(o.NewFiles) {
		var ret []NewFileParams
		return ret
	}
	return o.NewFiles
}

// GetNewFilesOk returns a tuple with the NewFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewFilesParams) GetNewFilesOk() ([]NewFileParams, bool) {
	if o == nil || IsNil(o.NewFiles) {
		return nil, false
	}
	return o.NewFiles, true
}

// HasNewFiles returns a boolean if a field has been set.
func (o *NewFilesParams) HasNewFiles() bool {
	if o != nil && !IsNil(o.NewFiles) {
		return true
	}

	return false
}

// SetNewFiles gets a reference to the given []NewFileParams and assigns it to the NewFiles field.
func (o *NewFilesParams) SetNewFiles(v []NewFileParams) {
	o.NewFiles = v
}

func (o NewFilesParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewFilesParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewFiles) {
		toSerialize["newFiles"] = o.NewFiles
	}
	return toSerialize, nil
}

type NullableNewFilesParams struct {
	value *NewFilesParams
	isSet bool
}

func (v NullableNewFilesParams) Get() *NewFilesParams {
	return v.value
}

func (v *NullableNewFilesParams) Set(val *NewFilesParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNewFilesParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNewFilesParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewFilesParams(val *NewFilesParams) *NullableNewFilesParams {
	return &NullableNewFilesParams{value: val, isSet: true}
}

func (v NullableNewFilesParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewFilesParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


