/*
Weblens API

Programmatic access to the Weblens server

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestoreFilesBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreFilesBody{}

// RestoreFilesBody struct for RestoreFilesBody
type RestoreFilesBody struct {
	FileIds []string `json:"fileIds,omitempty"`
	NewParentId *string `json:"newParentId,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
}

// NewRestoreFilesBody instantiates a new RestoreFilesBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreFilesBody() *RestoreFilesBody {
	this := RestoreFilesBody{}
	return &this
}

// NewRestoreFilesBodyWithDefaults instantiates a new RestoreFilesBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreFilesBodyWithDefaults() *RestoreFilesBody {
	this := RestoreFilesBody{}
	return &this
}

// GetFileIds returns the FileIds field value if set, zero value otherwise.
func (o *RestoreFilesBody) GetFileIds() []string {
	if o == nil || IsNil(o.FileIds) {
		var ret []string
		return ret
	}
	return o.FileIds
}

// GetFileIdsOk returns a tuple with the FileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreFilesBody) GetFileIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FileIds) {
		return nil, false
	}
	return o.FileIds, true
}

// HasFileIds returns a boolean if a field has been set.
func (o *RestoreFilesBody) HasFileIds() bool {
	if o != nil && !IsNil(o.FileIds) {
		return true
	}

	return false
}

// SetFileIds gets a reference to the given []string and assigns it to the FileIds field.
func (o *RestoreFilesBody) SetFileIds(v []string) {
	o.FileIds = v
}

// GetNewParentId returns the NewParentId field value if set, zero value otherwise.
func (o *RestoreFilesBody) GetNewParentId() string {
	if o == nil || IsNil(o.NewParentId) {
		var ret string
		return ret
	}
	return *o.NewParentId
}

// GetNewParentIdOk returns a tuple with the NewParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreFilesBody) GetNewParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.NewParentId) {
		return nil, false
	}
	return o.NewParentId, true
}

// HasNewParentId returns a boolean if a field has been set.
func (o *RestoreFilesBody) HasNewParentId() bool {
	if o != nil && !IsNil(o.NewParentId) {
		return true
	}

	return false
}

// SetNewParentId gets a reference to the given string and assigns it to the NewParentId field.
func (o *RestoreFilesBody) SetNewParentId(v string) {
	o.NewParentId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *RestoreFilesBody) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreFilesBody) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *RestoreFilesBody) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *RestoreFilesBody) SetTimestamp(v int32) {
	o.Timestamp = &v
}

func (o RestoreFilesBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreFilesBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileIds) {
		toSerialize["fileIds"] = o.FileIds
	}
	if !IsNil(o.NewParentId) {
		toSerialize["newParentId"] = o.NewParentId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableRestoreFilesBody struct {
	value *RestoreFilesBody
	isSet bool
}

func (v NullableRestoreFilesBody) Get() *RestoreFilesBody {
	return v.value
}

func (v *NullableRestoreFilesBody) Set(val *RestoreFilesBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreFilesBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreFilesBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreFilesBody(val *RestoreFilesBody) *NullableRestoreFilesBody {
	return &NullableRestoreFilesBody{value: val, isSet: true}
}

func (v NullableRestoreFilesBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreFilesBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


